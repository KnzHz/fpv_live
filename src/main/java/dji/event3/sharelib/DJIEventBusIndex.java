package dji.event3.sharelib;

import dji.component.areacode.DJIAreaCodeEvent;
import dji.component.areacode.DJIAreaCodeStrategyEvent;
import dji.internal.diagnostics.DiagnosticsBaseHandler;
import dji.internal.diagnostics.handler.Air1860DiagnosticsHandler;
import dji.internal.diagnostics.handler.BatteryDiagnosticsHandler;
import dji.internal.diagnostics.handler.CameraDiagnosticsHandler;
import dji.internal.diagnostics.handler.CenterBoardDiagnosticsHandler;
import dji.internal.diagnostics.handler.FlightControllerDiagnosticsHandler;
import dji.internal.diagnostics.handler.GimbalDiagnosticsHandler;
import dji.internal.diagnostics.handler.LightbridgeDiagnosticsHandler;
import dji.internal.diagnostics.handler.RemoteControllerDiagnosticsHandler;
import dji.internal.diagnostics.handler.VisionDiagnosticsHandler;
import dji.internal.logics.FPVTipLogic;
import dji.internal.logics.LogicManager;
import dji.internal.logics.calibration.DJIRemoteControllerCalibrationLogics;
import dji.internal.logics.countrycode.CountryCodeAirLinkLogic;
import dji.internal.logics.virtualjoystick.JoystickBaseController;
import dji.internal.mission.abstraction.activetrack.ActiveTrackAbstraction;
import dji.internal.mission.abstraction.followme.FollowMeMissionAbstraction;
import dji.internal.mission.abstraction.hotpoint.HotpointMissionAbstraction;
import dji.internal.mission.abstraction.intelligenthotpoint.IntelligentHotpointMissionAbstraction;
import dji.internal.mission.abstraction.panorama.PanoramaMissionAbstraction;
import dji.internal.mission.abstraction.tapfly.TapFlyAbstraction;
import dji.internal.mission.abstraction.waypoint.WaypointMissionAbstraction;
import dji.internal.version.DJIRemoteVersionInfo;
import dji.internal.version.DJIVersionBaseComponent;
import dji.internal.version.DJIVersionCamera;
import dji.internal.version.DJIVersionPlatform;
import dji.internal.version.DJIVersionRC;
import dji.internal.version.VersionController;
import dji.internal.version.component.DJIVersionP4ARcComponent;
import dji.internal.version.component.DJIVersionP4PRcComponent;
import dji.internal.version.component.DJIVersionP4RcComponent;
import dji.midware.component.DJIComponentManager;
import dji.midware.data.config.P3.ProductType;
import dji.midware.data.manager.P3.DJIVideoEvent;
import dji.midware.data.manager.P3.DataCameraEvent;
import dji.midware.data.manager.P3.DataEvent;
import dji.midware.data.model.P3.Data1860GetPushCheckStatus;
import dji.midware.data.model.P3.Data2100GetPushCheckStatus;
import dji.midware.data.model.P3.Data2150GetPushCheckStatus;
import dji.midware.data.model.P3.DataADSBGetPushAvoidanceAction;
import dji.midware.data.model.P3.DataADSBGetPushWarning;
import dji.midware.data.model.P3.DataBatteryGetPushCheckStatus;
import dji.midware.data.model.P3.DataCameraActiveStatus;
import dji.midware.data.model.P3.DataCameraGetPushChartInfo;
import dji.midware.data.model.P3.DataCameraGetPushCurPanoFileName;
import dji.midware.data.model.P3.DataCameraGetPushRawNewParam;
import dji.midware.data.model.P3.DataCameraGetPushRawParams;
import dji.midware.data.model.P3.DataCameraGetPushRecordingName;
import dji.midware.data.model.P3.DataCameraGetPushShotInfo;
import dji.midware.data.model.P3.DataCameraGetPushShotParams;
import dji.midware.data.model.P3.DataCameraGetPushShutterCmd;
import dji.midware.data.model.P3.DataCameraGetPushStateInfo;
import dji.midware.data.model.P3.DataCameraGetPushStorageInfo;
import dji.midware.data.model.P3.DataCameraGetPushTapZoomStateInfo;
import dji.midware.data.model.P3.DataCameraGetPushTauParam;
import dji.midware.data.model.P3.DataCameraSetOpticsZoomMode;
import dji.midware.data.model.P3.DataCenterGetPushBatteryCommon;
import dji.midware.data.model.P3.DataCenterGetPushCheckStatus;
import dji.midware.data.model.P3.DataCenterRTKPushStatus;
import dji.midware.data.model.P3.DataCommonDataLockerCommonRequest;
import dji.midware.data.model.P3.DataCommonGetPushUpgradeStatus;
import dji.midware.data.model.P3.DataDm368GetPushStatus;
import dji.midware.data.model.P3.DataDm368PushLiveVideoStatus;
import dji.midware.data.model.P3.DataDm368_gGetPushCheckStatus;
import dji.midware.data.model.P3.DataEyeGetPushAdvancedPilotAssistantSystemState;
import dji.midware.data.model.P3.DataEyeGetPushAvoidanceParam;
import dji.midware.data.model.P3.DataEyeGetPushDrawState;
import dji.midware.data.model.P3.DataEyeGetPushException;
import dji.midware.data.model.P3.DataEyeGetPushFaceDetectionTakeOffState;
import dji.midware.data.model.P3.DataEyeGetPushFixedWingState;
import dji.midware.data.model.P3.DataEyeGetPushFlatCheck;
import dji.midware.data.model.P3.DataEyeGetPushFrontAvoidance;
import dji.midware.data.model.P3.DataEyeGetPushMultiTrackingInformation;
import dji.midware.data.model.P3.DataEyeGetPushMultiTrackingState;
import dji.midware.data.model.P3.DataEyeGetPushPOIExecutionParams;
import dji.midware.data.model.P3.DataEyeGetPushPOITargetInformation;
import dji.midware.data.model.P3.DataEyeGetPushPalmControlNotification;
import dji.midware.data.model.P3.DataEyeGetPushPalmControlState;
import dji.midware.data.model.P3.DataEyeGetPushPointState;
import dji.midware.data.model.P3.DataEyeGetPushPseudoCameraParams;
import dji.midware.data.model.P3.DataEyeGetPushPseudoCameraShotState;
import dji.midware.data.model.P3.DataEyeGetPushSensorException;
import dji.midware.data.model.P3.DataEyeGetPushStabilizationState;
import dji.midware.data.model.P3.DataEyeGetPushTimeLapseKeyFrame;
import dji.midware.data.model.P3.DataEyeGetPushTimeLapseOverallData;
import dji.midware.data.model.P3.DataEyeGetPushTrackStatus;
import dji.midware.data.model.P3.DataEyePushVisionTip;
import dji.midware.data.model.P3.DataFlycActiveStatus;
import dji.midware.data.model.P3.DataFlycGetPushAvoid;
import dji.midware.data.model.P3.DataFlycGetPushAvoidParam;
import dji.midware.data.model.P3.DataFlycGetPushCheckStatus;
import dji.midware.data.model.P3.DataFlycGetPushDeformStatus;
import dji.midware.data.model.P3.DataFlycGetPushFlycInstallError;
import dji.midware.data.model.P3.DataFlycGetPushForbidStatus;
import dji.midware.data.model.P3.DataFlycGetPushGoHomeCountDown;
import dji.midware.data.model.P3.DataFlycGetPushMassCenterCaliStatus;
import dji.midware.data.model.P3.DataFlycGetPushParamsByHash;
import dji.midware.data.model.P3.DataFlycGetPushRTKLocationData;
import dji.midware.data.model.P3.DataFlycGetPushSmartBattery;
import dji.midware.data.model.P3.DataFlycGetPushWayPointMissionCurrentEvent;
import dji.midware.data.model.P3.DataFlycGetPushWayPointMissionInfo;
import dji.midware.data.model.P3.DataFlycPushForbidDataInfos;
import dji.midware.data.model.P3.DataFlycPushRedundancyStatus;
import dji.midware.data.model.P3.DataGetPushDataFromPayload;
import dji.midware.data.model.P3.DataGetPushFloatHintMsgFromPayload;
import dji.midware.data.model.P3.DataGetPushMultiRcPairingStatus;
import dji.midware.data.model.P3.DataGetPushPayloadStatus;
import dji.midware.data.model.P3.DataGetPushPayloadWidgetProperty;
import dji.midware.data.model.P3.DataGetPushPayloadWidgetStatus;
import dji.midware.data.model.P3.DataGimbalGetPushAbnormalStatus;
import dji.midware.data.model.P3.DataGimbalGetPushAutoCalibrationStatus;
import dji.midware.data.model.P3.DataGimbalGetPushCheckStatus;
import dji.midware.data.model.P3.DataGimbalGetPushHandheldStickState;
import dji.midware.data.model.P3.DataGimbalGetPushParams;
import dji.midware.data.model.P3.DataGimbalGetPushUserParams;
import dji.midware.data.model.P3.DataModule4GGetPushOperator;
import dji.midware.data.model.P3.DataModule4GGetPushSignal;
import dji.midware.data.model.P3.DataNarrowBandBaseInfoConfig;
import dji.midware.data.model.P3.DataNarrowBandExchangeMode;
import dji.midware.data.model.P3.DataNarrowBandGetPushDeviceList;
import dji.midware.data.model.P3.DataNarrowBandGetPushStateInfo;
import dji.midware.data.model.P3.DataOnBoardSDKGetPushAccessoryInfo;
import dji.midware.data.model.P3.DataOnBoardSDKGetPushBeaconInfo;
import dji.midware.data.model.P3.DataOnBoardSDKGetPushSearchlightInfo;
import dji.midware.data.model.P3.DataOnBoardSDKGetPushSpeakerInfo;
import dji.midware.data.model.P3.DataOnboardGetPushDualGimbals;
import dji.midware.data.model.P3.DataOnboardGetPushMixInfo;
import dji.midware.data.model.P3.DataOsdActiveStatus;
import dji.midware.data.model.P3.DataOsdGetPushChannalStatus;
import dji.midware.data.model.P3.DataOsdGetPushCheckStatus;
import dji.midware.data.model.P3.DataOsdGetPushCheckStatusV2;
import dji.midware.data.model.P3.DataOsdGetPushCommon;
import dji.midware.data.model.P3.DataOsdGetPushConfig;
import dji.midware.data.model.P3.DataOsdGetPushHome;
import dji.midware.data.model.P3.DataOsdGetPushPowerStatus;
import dji.midware.data.model.P3.DataOsdGetPushSDRNfParams;
import dji.midware.data.model.P3.DataOsdGetPushSdrConfigInfo;
import dji.midware.data.model.P3.DataOsdGetPushSdrLteStatus;
import dji.midware.data.model.P3.DataOsdGetPushSdrSweepFrequency;
import dji.midware.data.model.P3.DataOsdGetPushSignalQuality;
import dji.midware.data.model.P3.DataOsdGetPushSweepFrequency;
import dji.midware.data.model.P3.DataOsdGetPushWirelessState;
import dji.midware.data.model.P3.DataOsdGetSDRPushCustomCodeRate;
import dji.midware.data.model.P3.DataRTKGetReferenceStationSource;
import dji.midware.data.model.P3.DataRcGetFDPushConnectStatus;
import dji.midware.data.model.P3.DataRcGetPushBatteryInfo;
import dji.midware.data.model.P3.DataRcGetPushFollowFocus;
import dji.midware.data.model.P3.DataRcGetPushFollowFocus2;
import dji.midware.data.model.P3.DataRcGetPushGpsInfo;
import dji.midware.data.model.P3.DataRcGetPushParams;
import dji.midware.data.model.P3.DataRcGetPushRcCustomButtonsStatus;
import dji.midware.data.model.P3.DataRcGetPushRcProCustomButtonsStatus;
import dji.midware.data.model.P3.DataSimulatorGetPushConnectHeartPacket;
import dji.midware.data.model.P3.DataSimulatorGetPushFlightStatusParams;
import dji.midware.data.model.P3.DataSimulatorGetPushMainControllerReturnParams;
import dji.midware.data.model.P3.DataSimulatorSetGetWind;
import dji.midware.data.model.P3.DataSmartBatteryGetPushDynamicData;
import dji.midware.data.model.P3.DataWM160VisionGetPushCheckStatus;
import dji.midware.data.model.P3.DataWifiGetPushElecSignal;
import dji.midware.data.model.P3.DataWifiGetPushMasterSlaveStatus;
import dji.midware.data.model.P3.DataWifiGetPushSignal;
import dji.midware.data.model.P3.DataWifiGetPushSweepFrequency;
import dji.midware.data.model.P3.DataWifiGetPushWifiComplexInfo;
import dji.midware.data.model.P3.DataWifi_gGetPushCheckStatus;
import dji.midware.media.colors.ColorOscilloscopeDisplayView;
import dji.midware.media.event.BokehEvent;
import dji.midware.media.record.RecorderBase;
import dji.midware.usb.P3.LB2VideoController;
import dji.sdksharedlib.hardware.DJISDKCacheHWAbstractionLayer;
import dji.sdksharedlib.hardware.abstractions.airlink.lb.LB2AbstractionHelper;
import dji.sdksharedlib.hardware.abstractions.airlink.lb.Lightbridge2Abstraction;
import dji.sdksharedlib.hardware.abstractions.airlink.lb.Lightbridge2M210Abstraction;
import dji.sdksharedlib.hardware.abstractions.airlink.lb.LightbridgeAbstraction;
import dji.sdksharedlib.hardware.abstractions.airlink.lte.DJILteLinkAbstraction;
import dji.sdksharedlib.hardware.abstractions.airlink.ocusync.DJIOcuSyncDualBandLinkAbstraction;
import dji.sdksharedlib.hardware.abstractions.airlink.ocusync.DJIOcuSyncDualBandLinkPM420Abstraction;
import dji.sdksharedlib.hardware.abstractions.airlink.ocusync.DJIOcuSyncLinkAbstraction;
import dji.sdksharedlib.hardware.abstractions.airlink.wifi.DJIWifiLinkAbstraction;
import dji.sdksharedlib.hardware.abstractions.airlink.wifi.DJIWifiLinkFoldingDroneAbstraction;
import dji.sdksharedlib.hardware.abstractions.airlink.wifi.DJIWifiLinkWM160Abstraction;
import dji.sdksharedlib.hardware.abstractions.battery.BatteryAbstraction;
import dji.sdksharedlib.hardware.abstractions.battery.BatteryWM160Abstraction;
import dji.sdksharedlib.hardware.abstractions.battery.NonSmartBatteryAbstraction;
import dji.sdksharedlib.hardware.abstractions.camera.DJICameraAbstraction;
import dji.sdksharedlib.hardware.abstractions.camera.DJICameraBaseAbstraction;
import dji.sdksharedlib.hardware.abstractions.camera.FoldingDrone.DJICameraWM230Abstraction;
import dji.sdksharedlib.hardware.abstractions.camera.GD600.DJICameraGD600Abstraction;
import dji.sdksharedlib.hardware.abstractions.camera.zenmuse.DJICameraInspire2Abstraction;
import dji.sdksharedlib.hardware.abstractions.camera.zenmuse.DJICameraInspire2RawAbstraction;
import dji.sdksharedlib.hardware.abstractions.camera.zenmuse.DJICameraTauXT2Abstraction;
import dji.sdksharedlib.hardware.abstractions.camera.zenmuse.DJICameraWM245DualLightIRAbstraction;
import dji.sdksharedlib.hardware.abstractions.camera.zenmuse.DJICameraX5BaseAbstraction;
import dji.sdksharedlib.hardware.abstractions.camera.zenmuse.DJICameraX7Abstraction;
import dji.sdksharedlib.hardware.abstractions.camera.zenmuse.DJICameraXTBaseAbstraction;
import dji.sdksharedlib.hardware.abstractions.flightcontroller.FlightControllerAbstraction;
import dji.sdksharedlib.hardware.abstractions.flightcontroller.FlightControllerInspire1Abstraction;
import dji.sdksharedlib.hardware.abstractions.flightcontroller.FlightControllerM200Abstraction;
import dji.sdksharedlib.hardware.abstractions.flightcontroller.FlightControllerPM420Abstraction;
import dji.sdksharedlib.hardware.abstractions.flightcontroller.FlightControllerPhantom3Abstraction;
import dji.sdksharedlib.hardware.abstractions.flightcontroller.FlightControllerPhantom4Abstraction;
import dji.sdksharedlib.hardware.abstractions.flightcontroller.FlightControllerWM160Abstraction;
import dji.sdksharedlib.hardware.abstractions.flightcontroller.FlightControllerWM230Abstraction;
import dji.sdksharedlib.hardware.abstractions.flightcontroller.flightassistant.AccessLockerAbstraction;
import dji.sdksharedlib.hardware.abstractions.flightcontroller.flightassistant.IntelligentFlightAssistant1860Abstraction;
import dji.sdksharedlib.hardware.abstractions.flightcontroller.flightassistant.IntelligentFlightAssistantWM160Abstraction;
import dji.sdksharedlib.hardware.abstractions.flightcontroller.flightassistant.IntelligentFlightAssistantWM230Abstraction;
import dji.sdksharedlib.hardware.abstractions.flightcontroller.rtk.RTKAbstraction;
import dji.sdksharedlib.hardware.abstractions.flightcontroller.rtk.RTKPM420RTKAbstraction;
import dji.sdksharedlib.hardware.abstractions.flightcontroller.rtk.RTKPhantom4RTKAbstraction;
import dji.sdksharedlib.hardware.abstractions.gimbal.DJIGimbalAbstraction;
import dji.sdksharedlib.hardware.abstractions.gimbal.DJIGimbalAircraftAbstraction;
import dji.sdksharedlib.hardware.abstractions.gimbal.DJIGimbalInspire2Abstraction;
import dji.sdksharedlib.hardware.abstractions.gimbal.DJIGimbalMobileHandheldAbstraction;
import dji.sdksharedlib.hardware.abstractions.handheldcontroller.HandheldControllerBaseAbstraction;
import dji.sdksharedlib.hardware.abstractions.handheldcontroller.Mobile2HandheldControllerAbstraction;
import dji.sdksharedlib.hardware.abstractions.handheldcontroller.MobileHandheldControllerAbstraction;
import dji.sdksharedlib.hardware.abstractions.payload.DJIPayloadAbstraction;
import dji.sdksharedlib.hardware.abstractions.product.DJIProductAbstraction;
import dji.sdksharedlib.hardware.abstractions.remotecontroller.DJIRCAbstraction;
import dji.sdksharedlib.hardware.abstractions.remotecontroller.DJIRCC3SDRAbstraction;
import dji.sdksharedlib.hardware.abstractions.remotecontroller.DJIRCFoldingDroneAbstraction;
import dji.sdksharedlib.hardware.abstractions.remotecontroller.DJIRCInspire2Abstraction;
import dji.sdksharedlib.hardware.abstractions.remotecontroller.DJIRCPhantom4RTKAbstraction;
import dji.sdksharedlib.hardware.abstractions.remotecontroller.DJIRCProfessionalAbstraction;
import dji.sdksharedlib.hardware.abstractions.remotecontroller.DJIRCRM500Abstraction;
import dji.sdksharedlib.hardware.abstractions.remotecontroller.DJIRCSparkAbstraction;
import dji.sdksharedlib.hardware.abstractions.remotecontroller.DJIRCWM160Abstaction;
import dji.sdksharedlib.hardware.abstractions.remotecontroller.DJIRCWM240Abstraction;
import dji.sdksharedlib.hardware.accessory.AccessoryAbstraction;
import dji.sdksharedlib.hardware.accessory.BeaconAbstraction;
import dji.sdksharedlib.hardware.accessory.SpeakerAbstraction;
import dji.sdksharedlib.hardware.accessory.SpotlightAbstraction;
import dji.sdksharedlib.hardware.extension.DJISDKCacheAutoGetterVerifier;
import dji.sdksharedlib.store.DJISDKCacheStoreLayer;
import dji.sdksharedlib.store.DumpKeys;
import java.util.HashMap;
import java.util.Map;
import org.greenrobot.eventbus.ThreadMode;
import org.greenrobot.eventbus.meta.SimpleSubscriberInfo;
import org.greenrobot.eventbus.meta.SubscriberInfo;
import org.greenrobot.eventbus.meta.SubscriberInfoIndex;
import org.greenrobot.eventbus.meta.SubscriberMethodInfo;

public class DJIEventBusIndex implements SubscriberInfoIndex {
    private static final Map<Class<?>, SubscriberInfo> SUBSCRIBER_INDEX = new HashMap();

    static {
        putIndex(new SimpleSubscriberInfo(HotpointMissionAbstraction.class, true, new SubscriberMethodInfo[]{new SubscriberMethodInfo("onEvent3BackgroundThread", DataOsdGetPushCommon.class, ThreadMode.BACKGROUND), new SubscriberMethodInfo("onEvent3BackgroundThread", DataOsdGetPushHome.class, ThreadMode.BACKGROUND), new SubscriberMethodInfo("onEvent3BackgroundThread", DataFlycGetPushWayPointMissionInfo.class, ThreadMode.BACKGROUND)}));
        putIndex(new SimpleSubscriberInfo(RTKPhantom4RTKAbstraction.class, true, new SubscriberMethodInfo[]{new SubscriberMethodInfo("onEvent3BackgroundThread", DataFlycGetPushRTKLocationData.class, ThreadMode.BACKGROUND), new SubscriberMethodInfo("onEvent3BackgroundThread", DataSmartBatteryGetPushDynamicData.class, ThreadMode.BACKGROUND), new SubscriberMethodInfo("onEvent3BackgroundThread", DataRTKGetReferenceStationSource.class, ThreadMode.BACKGROUND)}));
        putIndex(new SimpleSubscriberInfo(FlightControllerAbstraction.class, true, new SubscriberMethodInfo[]{new SubscriberMethodInfo("onEvent3BackgroundThread", DataFlycGetPushForbidStatus.class, ThreadMode.BACKGROUND), new SubscriberMethodInfo("onEvent3BackgroundThread", DataFlycGetPushAvoid.class, ThreadMode.BACKGROUND), new SubscriberMethodInfo("onEvent3BackgroundThread", DataSimulatorGetPushMainControllerReturnParams.class, ThreadMode.BACKGROUND), new SubscriberMethodInfo("onEvent3BackgroundThread", DataFlycGetPushAvoidParam.class, ThreadMode.BACKGROUND), new SubscriberMethodInfo("onEvent3BackgroundThread", DataSimulatorGetPushConnectHeartPacket.class, ThreadMode.BACKGROUND), new SubscriberMethodInfo("onEvent3BackgroundThread", DataSimulatorSetGetWind.class, ThreadMode.BACKGROUND), new SubscriberMethodInfo("onEvent3BackgroundThread", DataSimulatorGetPushFlightStatusParams.class, ThreadMode.BACKGROUND), new SubscriberMethodInfo("onEvent3BackgroundThread", DataFlycGetPushFlycInstallError.class, ThreadMode.BACKGROUND), new SubscriberMethodInfo("onEvent3BackgroundThread", DataADSBGetPushWarning.class, ThreadMode.BACKGROUND), new SubscriberMethodInfo("onEvent3BackgroundThread", DataADSBGetPushAvoidanceAction.class, ThreadMode.BACKGROUND), new SubscriberMethodInfo("onEvent3BackgroundThread", DataFlycGetPushParamsByHash.class, ThreadMode.BACKGROUND), new SubscriberMethodInfo("onEvent3BackgroundThread", DataRcGetPushParams.class, ThreadMode.BACKGROUND), new SubscriberMethodInfo("onEvent3BackgroundThread", DataFlycPushForbidDataInfos.class, ThreadMode.BACKGROUND), new SubscriberMethodInfo("onEvent3BackgroundThread", DataFlycGetPushWayPointMissionInfo.class, ThreadMode.BACKGROUND), new SubscriberMethodInfo("onEvent3BackgroundThread", DataOsdGetPushCommon.class, ThreadMode.ASYNC), new SubscriberMethodInfo("onEvent3BackgroundThread", DataOsdGetPushHome.class, ThreadMode.BACKGROUND), new SubscriberMethodInfo("onEvent3BackgroundThread", DataFlycGetPushGoHomeCountDown.class, ThreadMode.BACKGROUND), new SubscriberMethodInfo("onEvent3BackgroundThread", DataFlycGetPushSmartBattery.class, ThreadMode.BACKGROUND), new SubscriberMethodInfo("onEvent3BackgroundThread", Data1860GetPushCheckStatus.class, ThreadMode.BACKGROUND), new SubscriberMethodInfo("onEvent3BackgroundThread", DataFlycPushRedundancyStatus.class, ThreadMode.BACKGROUND)}));
        putIndex(new SimpleSubscriberInfo(RTKAbstraction.class, true, new SubscriberMethodInfo[]{new SubscriberMethodInfo("onEvent3BackgroundThread", DataCenterRTKPushStatus.class, ThreadMode.BACKGROUND), new SubscriberMethodInfo("onEvent3BackgroundThread", DataFlycGetPushRTKLocationData.class, ThreadMode.BACKGROUND)}));
        putIndex(new SimpleSubscriberInfo(BatteryAbstraction.class, true, new SubscriberMethodInfo[]{new SubscriberMethodInfo("onEvent3BackgroundThread", DataCenterGetPushBatteryCommon.class, ThreadMode.BACKGROUND), new SubscriberMethodInfo("onEvent3BackgroundThread", DataFlycGetPushSmartBattery.class, ThreadMode.BACKGROUND)}));
        putIndex(new SimpleSubscriberInfo(LB2AbstractionHelper.class, true, new SubscriberMethodInfo[]{new SubscriberMethodInfo("onEvent3BackgroundThread", LB2VideoController.EncodeMode.class, ThreadMode.BACKGROUND)}));
        putIndex(new SimpleSubscriberInfo(CountryCodeAirLinkLogic.class, true, new SubscriberMethodInfo[]{new SubscriberMethodInfo("onEvent3BackgroundThread", DJIAreaCodeEvent.class, ThreadMode.BACKGROUND), new SubscriberMethodInfo("onEvent3BackgroundThread", DJIAreaCodeStrategyEvent.class, ThreadMode.BACKGROUND), new SubscriberMethodInfo("onEvent3BackgroundThread", DataCameraEvent.class, ThreadMode.BACKGROUND)}));
        putIndex(new SimpleSubscriberInfo(BeaconAbstraction.class, true, new SubscriberMethodInfo[]{new SubscriberMethodInfo("onEvent3BackgroundThread", DataOnBoardSDKGetPushBeaconInfo.class, ThreadMode.BACKGROUND)}));
        putIndex(new SimpleSubscriberInfo(DJIVersionP4PRcComponent.class, true, new SubscriberMethodInfo[]{new SubscriberMethodInfo("onEvent3BackgroundThread", DataEvent.class, ThreadMode.BACKGROUND)}));
        putIndex(new SimpleSubscriberInfo(ActiveTrackAbstraction.class, true, new SubscriberMethodInfo[]{new SubscriberMethodInfo("onEvent3BackgroundThread", DataEvent.class, ThreadMode.BACKGROUND), new SubscriberMethodInfo("onEvent3BackgroundThread", DataOsdGetPushCommon.class, ThreadMode.BACKGROUND), new SubscriberMethodInfo("onEvent3BackgroundThread", DataEyeGetPushException.class, ThreadMode.BACKGROUND), new SubscriberMethodInfo("onEvent3BackgroundThread", DataEyeGetPushTrackStatus.class, ThreadMode.BACKGROUND), new SubscriberMethodInfo("onEvent3BackgroundThread", DataEyeGetPushMultiTrackingInformation.class, ThreadMode.BACKGROUND)}));
        putIndex(new SimpleSubscriberInfo(Lightbridge2M210Abstraction.class, true, new SubscriberMethodInfo[]{new SubscriberMethodInfo("onEvent3BackgroundThread", DataOnboardGetPushMixInfo.class, ThreadMode.BACKGROUND)}));
        putIndex(new SimpleSubscriberInfo(DJIGimbalInspire2Abstraction.class, true, new SubscriberMethodInfo[]{new SubscriberMethodInfo("onEvent3BackgroundThread", DataOnboardGetPushMixInfo.class, ThreadMode.BACKGROUND)}));
        putIndex(new SimpleSubscriberInfo(DJIWifiLinkFoldingDroneAbstraction.class, true, new SubscriberMethodInfo[]{new SubscriberMethodInfo("onEvent3BackgroundThread", DataWifiGetPushSignal.class, ThreadMode.BACKGROUND)}));
        putIndex(new SimpleSubscriberInfo(CenterBoardDiagnosticsHandler.class, true, new SubscriberMethodInfo[]{new SubscriberMethodInfo("onEvent3BackgroundThread", DataCenterGetPushCheckStatus.class, ThreadMode.BACKGROUND)}));
        putIndex(new SimpleSubscriberInfo(FlightControllerWM160Abstraction.class, true, new SubscriberMethodInfo[]{new SubscriberMethodInfo("onEvent3BackgroundThread", DataOsdGetPushHome.class, ThreadMode.BACKGROUND)}));
        putIndex(new SimpleSubscriberInfo(DJIRemoteControllerCalibrationLogics.class, true, new SubscriberMethodInfo[]{new SubscriberMethodInfo("onEvent3MainThread", DataRcGetPushParams.class, ThreadMode.MAIN)}));
        putIndex(new SimpleSubscriberInfo(FlightControllerM200Abstraction.class, true, new SubscriberMethodInfo[]{new SubscriberMethodInfo("onEvent3BackgroundThread", DataOnboardGetPushMixInfo.class, ThreadMode.BACKGROUND)}));
        putIndex(new SimpleSubscriberInfo(FlightControllerInspire1Abstraction.class, true, new SubscriberMethodInfo[]{new SubscriberMethodInfo("onEvent3BackgroundThread", DataFlycGetPushDeformStatus.class, ThreadMode.BACKGROUND)}));
        putIndex(new SimpleSubscriberInfo(BatteryDiagnosticsHandler.class, true, new SubscriberMethodInfo[]{new SubscriberMethodInfo("onEvent3BackgroundThread", DataCenterGetPushBatteryCommon.class, ThreadMode.BACKGROUND), new SubscriberMethodInfo("onEvent3BackgroundThread", DataOsdGetPushCommon.class, ThreadMode.BACKGROUND), new SubscriberMethodInfo("onEvent3BackgroundThread", DataFlycGetPushSmartBattery.class, ThreadMode.BACKGROUND), new SubscriberMethodInfo("onEvent3BackgroundThread", DataBatteryGetPushCheckStatus.class, ThreadMode.BACKGROUND), new SubscriberMethodInfo("onEvent3BackgroundThread", DataSmartBatteryGetPushDynamicData.class, ThreadMode.BACKGROUND)}));
        putIndex(new SimpleSubscriberInfo(DJIRCAbstraction.class, true, new SubscriberMethodInfo[]{new SubscriberMethodInfo("onEvent3BackgroundThread", DataCommonGetPushUpgradeStatus.class, ThreadMode.BACKGROUND), new SubscriberMethodInfo("onEvent3BackgroundThread", DataRcGetPushParams.class, ThreadMode.BACKGROUND), new SubscriberMethodInfo("onEvent3BackgroundThread", DataRcGetPushRcCustomButtonsStatus.class, ThreadMode.BACKGROUND), new SubscriberMethodInfo("onEvent3BackgroundThread", DataRcGetPushGpsInfo.class, ThreadMode.BACKGROUND), new SubscriberMethodInfo("onEvent3BackgroundThread", DataRcGetPushBatteryInfo.class, ThreadMode.BACKGROUND), new SubscriberMethodInfo("onEvent3BackgroundThread", DataOsdGetPushCheckStatus.class, ThreadMode.BACKGROUND), new SubscriberMethodInfo("onEvent3BackgroundThread", DataRcGetPushFollowFocus.class, ThreadMode.BACKGROUND), new SubscriberMethodInfo("onEvent3BackgroundThread", DataRcGetPushFollowFocus2.class, ThreadMode.BACKGROUND)}));
        putIndex(new SimpleSubscriberInfo(Air1860DiagnosticsHandler.class, true, new SubscriberMethodInfo[]{new SubscriberMethodInfo("onEvent3BackgroundThread", DataOsdGetPushSignalQuality.class, ThreadMode.BACKGROUND), new SubscriberMethodInfo("onEvent3BackgroundThread", DataWifiGetPushSignal.class, ThreadMode.BACKGROUND), new SubscriberMethodInfo("onEvent3BackgroundThread", DataOsdGetPushWirelessState.class, ThreadMode.BACKGROUND), new SubscriberMethodInfo("onEvent3BackgroundThread", DataOsdGetPushCheckStatusV2.class, ThreadMode.BACKGROUND), new SubscriberMethodInfo("onEvent3BackgroundThread", Data1860GetPushCheckStatus.class, ThreadMode.BACKGROUND), new SubscriberMethodInfo("onEvent3BackgroundThread", DataWifiGetPushElecSignal.class, ThreadMode.BACKGROUND)}));
        putIndex(new SimpleSubscriberInfo(DJICameraTauXT2Abstraction.class, true, new SubscriberMethodInfo[]{new SubscriberMethodInfo("onEvent3BackgroundThread", DataCameraGetPushTauParam.class, ThreadMode.BACKGROUND)}));
        putIndex(new SimpleSubscriberInfo(FlightControllerWM230Abstraction.class, true, new SubscriberMethodInfo[]{new SubscriberMethodInfo("onEvent3BackgroundThread", DataOsdGetPushHome.class, ThreadMode.BACKGROUND)}));
        putIndex(new SimpleSubscriberInfo(NonSmartBatteryAbstraction.class, true, new SubscriberMethodInfo[]{new SubscriberMethodInfo("onEvent3BackgroundThread", DataFlycGetPushSmartBattery.class, ThreadMode.BACKGROUND)}));
        putIndex(new SimpleSubscriberInfo(DJIVersionPlatform.class, true, new SubscriberMethodInfo[]{new SubscriberMethodInfo("onEvent3BackgroundThread", DJIVersionBaseComponent.class, ThreadMode.BACKGROUND), new SubscriberMethodInfo("onEvent3BackgroundThread", DJIComponentManager.PlatformType.class, ThreadMode.BACKGROUND), new SubscriberMethodInfo("onEvent3BackgroundThread", DataCommonGetPushUpgradeStatus.class, ThreadMode.BACKGROUND)}));
        putIndex(new SimpleSubscriberInfo(DJICameraInspire2RawAbstraction.class, true, new SubscriberMethodInfo[]{new SubscriberMethodInfo("onEvent3BackgroundThread", DataCameraGetPushRawParams.class, ThreadMode.BACKGROUND)}));
        putIndex(new SimpleSubscriberInfo(WaypointMissionAbstraction.class, true, new SubscriberMethodInfo[]{new SubscriberMethodInfo("onEvent3BackgroundThread", DataOsdGetPushCommon.class, ThreadMode.BACKGROUND), new SubscriberMethodInfo("onEvent3BackgroundThread", DataOsdGetPushHome.class, ThreadMode.BACKGROUND), new SubscriberMethodInfo("onEvent3BackgroundThread", DataFlycGetPushWayPointMissionCurrentEvent.class, ThreadMode.BACKGROUND), new SubscriberMethodInfo("onEvent3BackgroundThread", DataFlycGetPushWayPointMissionInfo.class, ThreadMode.BACKGROUND)}));
        putIndex(new SimpleSubscriberInfo(DJIProductAbstraction.class, true, new SubscriberMethodInfo[]{new SubscriberMethodInfo("onEvent3BackgroundThread", DataFlycActiveStatus.class, ThreadMode.BACKGROUND), new SubscriberMethodInfo("onEvent3BackgroundThread", DataCameraActiveStatus.class, ThreadMode.BACKGROUND), new SubscriberMethodInfo("onEvent3BackgroundThread", DataOsdActiveStatus.class, ThreadMode.BACKGROUND), new SubscriberMethodInfo("onEvent3BackgroundThread", ProductType.class, ThreadMode.BACKGROUND), new SubscriberMethodInfo("onEvent3BackgroundThread", DJIComponentManager.RcComponentType.class, ThreadMode.BACKGROUND), new SubscriberMethodInfo("onEvent3BackgroundThread", DJIComponentManager.CameraComponentType.class, ThreadMode.BACKGROUND), new SubscriberMethodInfo("onEvent3BackgroundThread", DJIComponentManager.PlatformType.class, ThreadMode.BACKGROUND), new SubscriberMethodInfo("onEvent3BackgroundThread", DataEvent.class, ThreadMode.BACKGROUND), new SubscriberMethodInfo("onEvent3BackgroundThread", DataOsdGetPushCommon.class, ThreadMode.ASYNC)}));
        putIndex(new SimpleSubscriberInfo(LogicManager.class, true, new SubscriberMethodInfo[]{new SubscriberMethodInfo("onEvent3BackgroundThread", DataOsdGetPushCommon.class, ThreadMode.BACKGROUND), new SubscriberMethodInfo("onEvent3BackgroundThread", DataGimbalGetPushParams.class, ThreadMode.BACKGROUND), new SubscriberMethodInfo("onEvent3BackgroundThread", DataOsdGetPushHome.class, ThreadMode.BACKGROUND), new SubscriberMethodInfo("onEvent3BackgroundThread", DataOsdGetPushChannalStatus.class, ThreadMode.BACKGROUND), new SubscriberMethodInfo("onEvent3BackgroundThread", DataWifiGetPushElecSignal.class, ThreadMode.BACKGROUND), new SubscriberMethodInfo("onEvent3BackgroundThread", ProductType.class, ThreadMode.BACKGROUND), new SubscriberMethodInfo("onEvent3BackgroundThread", DataFlycGetPushCheckStatus.class, ThreadMode.BACKGROUND), new SubscriberMethodInfo("onEvent3BackgroundThread", Data2100GetPushCheckStatus.class, ThreadMode.BACKGROUND)}));
        putIndex(new SimpleSubscriberInfo(DJIVersionP4ARcComponent.class, true, new SubscriberMethodInfo[]{new SubscriberMethodInfo("onEvent3BackgroundThread", DataEvent.class, ThreadMode.BACKGROUND)}));
        putIndex(new SimpleSubscriberInfo(DJIVersionBaseComponent.class, true, new SubscriberMethodInfo[]{new SubscriberMethodInfo("onEvent3BackgroundThread", DJIRemoteVersionInfo.class, ThreadMode.BACKGROUND)}));
        putIndex(new SimpleSubscriberInfo(AccessLockerAbstraction.class, true, new SubscriberMethodInfo[]{new SubscriberMethodInfo("onEvent3BackgroundThread", DataCommonDataLockerCommonRequest.class, ThreadMode.BACKGROUND)}));
        putIndex(new SimpleSubscriberInfo(LightbridgeDiagnosticsHandler.class, true, new SubscriberMethodInfo[]{new SubscriberMethodInfo("onEvent3BackgroundThread", DataDm368_gGetPushCheckStatus.class, ThreadMode.BACKGROUND)}));
        putIndex(new SimpleSubscriberInfo(DJIWifiLinkWM160Abstraction.class, true, new SubscriberMethodInfo[]{new SubscriberMethodInfo("onEvent3BackgroundThread", DataWifiGetPushWifiComplexInfo.class, ThreadMode.BACKGROUND), new SubscriberMethodInfo("onEvent3BackgroundThread", DataWifiGetPushSignal.class, ThreadMode.BACKGROUND)}));
        putIndex(new SimpleSubscriberInfo(DJIVersionP4RcComponent.class, true, new SubscriberMethodInfo[]{new SubscriberMethodInfo("onEvent3BackgroundThread", DataEvent.class, ThreadMode.BACKGROUND)}));
        putIndex(new SimpleSubscriberInfo(SpotlightAbstraction.class, true, new SubscriberMethodInfo[]{new SubscriberMethodInfo("onEvent3BackgroundThread", DataOnBoardSDKGetPushSearchlightInfo.class, ThreadMode.BACKGROUND)}));
        putIndex(new SimpleSubscriberInfo(VisionDiagnosticsHandler.class, true, new SubscriberMethodInfo[]{new SubscriberMethodInfo("onEvent3BackgroundThread", Data2100GetPushCheckStatus.class, ThreadMode.BACKGROUND), new SubscriberMethodInfo("onEvent3MainThread", Data2150GetPushCheckStatus.class, ThreadMode.BACKGROUND), new SubscriberMethodInfo("onEvent3MainThread", DataEyeGetPushSensorException.class, ThreadMode.BACKGROUND), new SubscriberMethodInfo("onEvent3MainThread", DataWM160VisionGetPushCheckStatus.class, ThreadMode.BACKGROUND)}));
        putIndex(new SimpleSubscriberInfo(IntelligentFlightAssistantWM160Abstraction.class, true, new SubscriberMethodInfo[]{new SubscriberMethodInfo("onEvent3BackgroundThread", DataEyeGetPushException.class, ThreadMode.BACKGROUND), new SubscriberMethodInfo("onEvent3BackgroundThread", DataEyeGetPushMultiTrackingState.class, ThreadMode.BACKGROUND), new SubscriberMethodInfo("onEvent3BackgroundThread", DataEyeGetPushMultiTrackingInformation.class, ThreadMode.BACKGROUND)}));
        putIndex(new SimpleSubscriberInfo(DJIOcuSyncDualBandLinkPM420Abstraction.class, true, new SubscriberMethodInfo[]{new SubscriberMethodInfo("onEvent3BackgroundThread", DataDm368PushLiveVideoStatus.class, ThreadMode.BACKGROUND)}));
        putIndex(new SimpleSubscriberInfo(VersionController.class, true, new SubscriberMethodInfo[]{new SubscriberMethodInfo("onEvent3BackgroundThread", DJIVersionPlatform.class, ThreadMode.BACKGROUND), new SubscriberMethodInfo("onEvent3BackgroundThread", DJIVersionRC.class, ThreadMode.BACKGROUND), new SubscriberMethodInfo("onEvent3BackgroundThread", DJIVersionCamera.class, ThreadMode.BACKGROUND)}));
        putIndex(new SimpleSubscriberInfo(DJICameraWM230Abstraction.class, true, new SubscriberMethodInfo[]{new SubscriberMethodInfo("onEvent3BackgroundThread", DataEyeGetPushPseudoCameraParams.class, ThreadMode.BACKGROUND)}));
        putIndex(new SimpleSubscriberInfo(CameraDiagnosticsHandler.class, true, new SubscriberMethodInfo[]{new SubscriberMethodInfo("onEvent3BackgroundThread", DataCameraGetPushStateInfo.class, ThreadMode.BACKGROUND), new SubscriberMethodInfo("onEvent3BackgroundThread", DataCameraGetPushStorageInfo.class, ThreadMode.BACKGROUND), new SubscriberMethodInfo("onEvent3BackgroundThread", DataDm368_gGetPushCheckStatus.class, ThreadMode.BACKGROUND)}));
        putIndex(new SimpleSubscriberInfo(GimbalDiagnosticsHandler.class, true, new SubscriberMethodInfo[]{new SubscriberMethodInfo("onEvent3BackgroundThread", DataGimbalGetPushCheckStatus.class, ThreadMode.BACKGROUND), new SubscriberMethodInfo("onEvent3BackgroundThread", DataGimbalGetPushParams.class, ThreadMode.BACKGROUND), new SubscriberMethodInfo("onEvent3BackgroundThread", DataOsdGetPushCommon.class, ThreadMode.BACKGROUND), new SubscriberMethodInfo("onEvent3BackgroundThread", DataEyeGetPushPointState.class, ThreadMode.BACKGROUND)}));
        putIndex(new SimpleSubscriberInfo(DJISDKCacheStoreLayer.class, true, new SubscriberMethodInfo[]{new SubscriberMethodInfo("onEvent3BackgroundThread", DumpKeys.class, ThreadMode.BACKGROUND)}));
        putIndex(new SimpleSubscriberInfo(DJICameraWM245DualLightIRAbstraction.class, true, new SubscriberMethodInfo[]{new SubscriberMethodInfo("onEvent3BackgroundThread", DataCameraGetPushStateInfo.class, ThreadMode.BACKGROUND), new SubscriberMethodInfo("onEvent3BackgroundThread", DataCameraGetPushStorageInfo.class, ThreadMode.BACKGROUND)}));
        putIndex(new SimpleSubscriberInfo(DJIRCRM500Abstraction.class, true, new SubscriberMethodInfo[]{new SubscriberMethodInfo("onEvent3BackgroundThread", DataRcGetPushParams.class, ThreadMode.BACKGROUND)}));
        putIndex(new SimpleSubscriberInfo(PanoramaMissionAbstraction.class, true, new SubscriberMethodInfo[]{new SubscriberMethodInfo("onEvent3BackgroundThread", DataCameraGetPushCurPanoFileName.class, ThreadMode.BACKGROUND)}));
        putIndex(new SimpleSubscriberInfo(RemoteControllerDiagnosticsHandler.class, true, new SubscriberMethodInfo[]{new SubscriberMethodInfo("onEvent3BackgroundThread", DataOsdGetPushCheckStatusV2.class, ThreadMode.BACKGROUND), new SubscriberMethodInfo("onEvent3BackgroundThread", DataOsdGetPushCheckStatus.class, ThreadMode.BACKGROUND), new SubscriberMethodInfo("onEvent3BackgroundThread", DataRcGetPushBatteryInfo.class, ThreadMode.BACKGROUND), new SubscriberMethodInfo("onEvent3BackgroundThread", DataRcGetPushFollowFocus2.class, ThreadMode.BACKGROUND), new SubscriberMethodInfo("onEvent3BackgroundThread", DataCameraGetPushShotParams.class, ThreadMode.BACKGROUND), new SubscriberMethodInfo("onEvent3BackgroundThread", DataRcGetPushGpsInfo.class, ThreadMode.BACKGROUND), new SubscriberMethodInfo("onEvent3BackgroundThread", DataWifi_gGetPushCheckStatus.class, ThreadMode.BACKGROUND)}));
        putIndex(new SimpleSubscriberInfo(AccessoryAbstraction.class, true, new SubscriberMethodInfo[]{new SubscriberMethodInfo("onEvent3BackgroundThread", DataOnBoardSDKGetPushAccessoryInfo.class, ThreadMode.BACKGROUND)}));
        putIndex(new SimpleSubscriberInfo(DJIRCInspire2Abstraction.class, true, new SubscriberMethodInfo[]{new SubscriberMethodInfo("onEvent3BackgroundThread", DataWifiGetPushMasterSlaveStatus.class, ThreadMode.BACKGROUND), new SubscriberMethodInfo("onEvent3BackgroundThread", DataRcGetPushParams.class, ThreadMode.BACKGROUND), new SubscriberMethodInfo("onEvent3BackgroundThread", DataOnboardGetPushMixInfo.class, ThreadMode.BACKGROUND), new SubscriberMethodInfo("onEvent3BackgroundThread", DataNarrowBandBaseInfoConfig.class, ThreadMode.BACKGROUND), new SubscriberMethodInfo("onEvent3BackgroundThread", DataNarrowBandGetPushStateInfo.class, ThreadMode.BACKGROUND), new SubscriberMethodInfo("onEvent3BackgroundThread", DataNarrowBandGetPushDeviceList.class, ThreadMode.BACKGROUND), new SubscriberMethodInfo("onEvent3BackgroundThread", DataNarrowBandExchangeMode.class, ThreadMode.BACKGROUND)}));
        putIndex(new SimpleSubscriberInfo(DJIRCWM240Abstraction.class, true, new SubscriberMethodInfo[]{new SubscriberMethodInfo("onEvent3BackgroundThread", DataRcGetPushParams.class, ThreadMode.BACKGROUND)}));
        putIndex(new SimpleSubscriberInfo(FollowMeMissionAbstraction.class, true, new SubscriberMethodInfo[]{new SubscriberMethodInfo("onEvent3BackgroundThread", DataOsdGetPushCommon.class, ThreadMode.BACKGROUND), new SubscriberMethodInfo("onEvent3BackgroundThread", DataOsdGetPushHome.class, ThreadMode.BACKGROUND), new SubscriberMethodInfo("onEvent3BackgroundThread", DataFlycGetPushWayPointMissionInfo.class, ThreadMode.BACKGROUND)}));
        putIndex(new SimpleSubscriberInfo(TapFlyAbstraction.class, true, new SubscriberMethodInfo[]{new SubscriberMethodInfo("onEvent3BackgroundThread", DataEvent.class, ThreadMode.BACKGROUND), new SubscriberMethodInfo("onEvent3BackgroundThread", DataOsdGetPushCommon.class, ThreadMode.BACKGROUND), new SubscriberMethodInfo("onEvent3BackgroundThread", DataEyeGetPushPointState.class, ThreadMode.BACKGROUND), new SubscriberMethodInfo("onEvent3BackgroundThread", DataEyeGetPushException.class, ThreadMode.BACKGROUND)}));
        putIndex(new SimpleSubscriberInfo(DJIPayloadAbstraction.class, true, new SubscriberMethodInfo[]{new SubscriberMethodInfo("onEvent3BackgroundThread", DataGetPushPayloadStatus.class, ThreadMode.BACKGROUND), new SubscriberMethodInfo("onEvent3BackgroundThread", DataGetPushPayloadWidgetStatus.class, ThreadMode.BACKGROUND), new SubscriberMethodInfo("onEvent3BackgroundThread", DataGetPushPayloadWidgetProperty.class, ThreadMode.BACKGROUND), new SubscriberMethodInfo("onEvent3BackgroundThread", DataGetPushDataFromPayload.class, ThreadMode.BACKGROUND), new SubscriberMethodInfo("onEvent3BackgroundThread", DataGetPushFloatHintMsgFromPayload.class, ThreadMode.BACKGROUND)}));
        putIndex(new SimpleSubscriberInfo(FlightControllerPM420Abstraction.class, true, new SubscriberMethodInfo[]{new SubscriberMethodInfo("onEvent3BackgroundThread", DataOnboardGetPushDualGimbals.class, ThreadMode.BACKGROUND), new SubscriberMethodInfo("onEvent3BackgroundThread", DataFlycGetPushMassCenterCaliStatus.class, ThreadMode.BACKGROUND), new SubscriberMethodInfo("onEvent3BackgroundThread", DataModule4GGetPushOperator.class, ThreadMode.BACKGROUND), new SubscriberMethodInfo("onEvent3BackgroundThread", DataModule4GGetPushSignal.class, ThreadMode.BACKGROUND)}));
        putIndex(new SimpleSubscriberInfo(DJICameraBaseAbstraction.class, true, new SubscriberMethodInfo[]{new SubscriberMethodInfo("onEvent3BackgroundThread", DataCameraGetPushShotParams.class, ThreadMode.BACKGROUND), new SubscriberMethodInfo("onEvent3BackgroundThread", DataEyeGetPushPseudoCameraParams.class, ThreadMode.BACKGROUND), new SubscriberMethodInfo("onEvent3BackgroundThread", DataCameraGetPushShotInfo.class, ThreadMode.BACKGROUND), new SubscriberMethodInfo("onEvent3BackgroundThread", DataCameraGetPushChartInfo.class, ThreadMode.BACKGROUND)}));
        putIndex(new SimpleSubscriberInfo(Lightbridge2Abstraction.class, true, new SubscriberMethodInfo[]{new SubscriberMethodInfo("onEvent3BackgroundThread", DataDm368GetPushStatus.class, ThreadMode.BACKGROUND), new SubscriberMethodInfo("onEvent3BackgroundThread", DataOsdGetPushConfig.class, ThreadMode.BACKGROUND)}));
        putIndex(new SimpleSubscriberInfo(FlightControllerPhantom3Abstraction.class, true, new SubscriberMethodInfo[]{new SubscriberMethodInfo("onEvent3BackgroundThread", DataFlycGetPushParamsByHash.class, ThreadMode.BACKGROUND)}));
        putIndex(new SimpleSubscriberInfo(DJICameraAbstraction.class, true, new SubscriberMethodInfo[]{new SubscriberMethodInfo("onEvent3BackgroundThread", BokehEvent.class, ThreadMode.BACKGROUND), new SubscriberMethodInfo("onEvent3BackgroundThread", DataEyeGetPushPseudoCameraParams.class, ThreadMode.BACKGROUND), new SubscriberMethodInfo("onEvent3BackgroundThread", DataEyeGetPushPseudoCameraShotState.class, ThreadMode.BACKGROUND), new SubscriberMethodInfo("onEvent3BackgroundThread", DataCameraGetPushRecordingName.class, ThreadMode.BACKGROUND), new SubscriberMethodInfo("onEvent3BackgroundThread", DataCameraGetPushStateInfo.class, ThreadMode.BACKGROUND), new SubscriberMethodInfo("onEvent3BackgroundThread", DataCameraGetPushStorageInfo.class, ThreadMode.BACKGROUND), new SubscriberMethodInfo("onEvent3BackgroundThread", DJIVersionCamera.class, ThreadMode.BACKGROUND), new SubscriberMethodInfo("onEvent3BackgroundThread", RecorderBase.RecorderStatus.class, ThreadMode.BACKGROUND)}));
        putIndex(new SimpleSubscriberInfo(JoystickBaseController.class, true, new SubscriberMethodInfo[]{new SubscriberMethodInfo("onEvent3BackgroundThread", DataCameraEvent.class, ThreadMode.BACKGROUND)}));
        putIndex(new SimpleSubscriberInfo(DJISDKCacheHWAbstractionLayer.class, true, new SubscriberMethodInfo[]{new SubscriberMethodInfo("onEvent3BackgroundThread", DJIComponentManager.PlatformType.class, ThreadMode.BACKGROUND), new SubscriberMethodInfo("onEvent3BackgroundThread", DJIComponentManager.PayloadComponentType.class, ThreadMode.BACKGROUND), new SubscriberMethodInfo("onEvent3BackgroundThread", DJIComponentManager.GimbalComponentType.class, ThreadMode.BACKGROUND), new SubscriberMethodInfo("onEvent3BackgroundThread", DJIComponentManager.RcComponentType.class, ThreadMode.BACKGROUND), new SubscriberMethodInfo("onEvent3BackgroundThread", DJIComponentManager.CameraComponentType.class, ThreadMode.BACKGROUND), new SubscriberMethodInfo("onEvent3BackgroundThread", DJIComponentManager.SmartBatteryComponentType.class, ThreadMode.BACKGROUND)}));
        putIndex(new SimpleSubscriberInfo(HandheldControllerBaseAbstraction.class, true, new SubscriberMethodInfo[]{new SubscriberMethodInfo("onEvent3BackgroundThread", DataOsdGetPushPowerStatus.class, ThreadMode.BACKGROUND)}));
        putIndex(new SimpleSubscriberInfo(DJIVersionCamera.class, true, new SubscriberMethodInfo[]{new SubscriberMethodInfo("onEvent3BackgroundThread", DJIVersionBaseComponent.class, ThreadMode.BACKGROUND), new SubscriberMethodInfo("onEvent3BackgroundThread", DJIComponentManager.CameraComponentType.class, ThreadMode.BACKGROUND)}));
        putIndex(new SimpleSubscriberInfo(SpeakerAbstraction.class, true, new SubscriberMethodInfo[]{new SubscriberMethodInfo("onEvent3BackgroundThread", DataOnBoardSDKGetPushSpeakerInfo.class, ThreadMode.BACKGROUND)}));
        putIndex(new SimpleSubscriberInfo(DJIGimbalAircraftAbstraction.class, true, new SubscriberMethodInfo[]{new SubscriberMethodInfo("onEvent3BackgroundThread", DataGimbalGetPushAutoCalibrationStatus.class, ThreadMode.BACKGROUND)}));
        putIndex(new SimpleSubscriberInfo(DJICameraX5BaseAbstraction.class, true, new SubscriberMethodInfo[]{new SubscriberMethodInfo("onEvent3BackgroundThread", DataCameraGetPushStateInfo.class, ThreadMode.BACKGROUND), new SubscriberMethodInfo("onEvent3BackgroundThread", DataCameraGetPushRawParams.class, ThreadMode.BACKGROUND)}));
        putIndex(new SimpleSubscriberInfo(IntelligentFlightAssistantWM230Abstraction.class, true, new SubscriberMethodInfo[]{new SubscriberMethodInfo("onEvent3BackgroundThread", DataEyeGetPushMultiTrackingState.class, ThreadMode.BACKGROUND), new SubscriberMethodInfo("onEvent3BackgroundThread", DataEyeGetPushException.class, ThreadMode.BACKGROUND), new SubscriberMethodInfo("onEvent3BackgroundThread", DataEyeGetPushMultiTrackingInformation.class, ThreadMode.BACKGROUND), new SubscriberMethodInfo("onEvent3BackgroundThread", DataEyeGetPushPalmControlNotification.class, ThreadMode.BACKGROUND)}));
        putIndex(new SimpleSubscriberInfo(MobileHandheldControllerAbstraction.class, true, new SubscriberMethodInfo[]{new SubscriberMethodInfo("onEvent3BackgroundThread", DataGimbalGetPushParams.class, ThreadMode.ASYNC), new SubscriberMethodInfo("onEvent3BackgroundThread", DataCameraGetPushShutterCmd.class, ThreadMode.BACKGROUND), new SubscriberMethodInfo("onEvent3BackgroundThread", DataGimbalGetPushHandheldStickState.class, ThreadMode.BACKGROUND)}));
        putIndex(new SimpleSubscriberInfo(DJIOcuSyncLinkAbstraction.RSSIEventHandler.class, true, new SubscriberMethodInfo[]{new SubscriberMethodInfo("onEvent3BackgroundThread", DataOsdGetPushSdrSweepFrequency.class, ThreadMode.BACKGROUND)}));
        putIndex(new SimpleSubscriberInfo(FlightControllerDiagnosticsHandler.class, true, new SubscriberMethodInfo[]{new SubscriberMethodInfo("onEvent3BackgroundThread", DataFlycGetPushCheckStatus.class, ThreadMode.BACKGROUND), new SubscriberMethodInfo("onEvent3BackgroundThread", DataOsdGetPushHome.class, ThreadMode.BACKGROUND), new SubscriberMethodInfo("onEvent3BackgroundThread", DataOsdGetPushCommon.class, ThreadMode.BACKGROUND), new SubscriberMethodInfo("onEvent3BackgroundThread", DataFlycGetPushForbidStatus.class, ThreadMode.BACKGROUND), new SubscriberMethodInfo("onEvent3BackgroundThread", DataFlycGetPushFlycInstallError.class, ThreadMode.BACKGROUND), new SubscriberMethodInfo("onEvent3BackgroundThread", DataADSBGetPushWarning.class, ThreadMode.BACKGROUND), new SubscriberMethodInfo("onEvent3BackgroundThread", DataFlycGetPushSmartBattery.class, ThreadMode.BACKGROUND)}));
        putIndex(new SimpleSubscriberInfo(DJIRCWM160Abstaction.class, true, new SubscriberMethodInfo[]{new SubscriberMethodInfo("onEvent3BackgroundThread", DataWifi_gGetPushCheckStatus.class, ThreadMode.BACKGROUND)}));
        putIndex(new SimpleSubscriberInfo(DJICameraGD600Abstraction.class, true, new SubscriberMethodInfo[]{new SubscriberMethodInfo("onEvent3BackgroundThread", DataCameraGetPushTapZoomStateInfo.class, ThreadMode.BACKGROUND), new SubscriberMethodInfo("onEvent3BackgroundThread", DataEyeGetPushStabilizationState.class, ThreadMode.BACKGROUND)}));
        putIndex(new SimpleSubscriberInfo(DJIRCC3SDRAbstraction.class, true, new SubscriberMethodInfo[]{new SubscriberMethodInfo("onEvent3BackgroundThread", DataModule4GGetPushOperator.class, ThreadMode.BACKGROUND), new SubscriberMethodInfo("onEvent3BackgroundThread", DataModule4GGetPushSignal.class, ThreadMode.BACKGROUND)}));
        putIndex(new SimpleSubscriberInfo(FPVTipLogic.class, true, new SubscriberMethodInfo[]{new SubscriberMethodInfo("onEvent3BackgroundThread", DataGimbalGetPushParams.class, ThreadMode.BACKGROUND), new SubscriberMethodInfo("onEvent3BackgroundThread", DataFlycGetPushCheckStatus.class, ThreadMode.BACKGROUND), new SubscriberMethodInfo("onEvent3BackgroundThread", DataGimbalGetPushCheckStatus.class, ThreadMode.BACKGROUND), new SubscriberMethodInfo("onEvent3BackgroundThread", DataSmartBatteryGetPushDynamicData.class, ThreadMode.BACKGROUND), new SubscriberMethodInfo("onEvent3BackgroundThread", DataCameraGetPushStateInfo.class, ThreadMode.BACKGROUND), new SubscriberMethodInfo("onEvent3BackgroundThread", DataCenterGetPushBatteryCommon.class, ThreadMode.BACKGROUND), new SubscriberMethodInfo("onEvent3BackgroundThread", DataOsdGetPushCommon.class, ThreadMode.BACKGROUND), new SubscriberMethodInfo("onEvent3BackgroundThread", DataFlycGetPushSmartBattery.class, ThreadMode.BACKGROUND), new SubscriberMethodInfo("onEvent3BackgroundThread", DataWifiGetPushSignal.class, ThreadMode.BACKGROUND), new SubscriberMethodInfo("onEvent3BackgroundThread", DataOsdGetPushSignalQuality.class, ThreadMode.BACKGROUND), new SubscriberMethodInfo("onEvent3BackgroundThread", DataRcGetPushBatteryInfo.class, ThreadMode.BACKGROUND), new SubscriberMethodInfo("onEvent3BackgroundThread", DataOsdGetPushHome.class, ThreadMode.BACKGROUND), new SubscriberMethodInfo("onEvent3BackgroundThread", DJIVideoEvent.class, ThreadMode.BACKGROUND), new SubscriberMethodInfo("onEvent3MainThread", DataCameraEvent.class, ThreadMode.BACKGROUND), new SubscriberMethodInfo("onEvent3BackgroundThread", DataEvent.class, ThreadMode.BACKGROUND)}));
        putIndex(new SimpleSubscriberInfo(DJICameraInspire2Abstraction.class, true, new SubscriberMethodInfo[]{new SubscriberMethodInfo("onEvent3BackgroundThread", DataCameraGetPushRawNewParam.class, ThreadMode.BACKGROUND), new SubscriberMethodInfo("onEvent3BackgroundThread", ColorOscilloscopeDisplayView.OscilloscopeDisplayEvent.class, ThreadMode.BACKGROUND)}));
        putIndex(new SimpleSubscriberInfo(DJIRCPhantom4RTKAbstraction.class, true, new SubscriberMethodInfo[]{new SubscriberMethodInfo("onEvent3BackgroundThread", DataGetPushMultiRcPairingStatus.class, ThreadMode.BACKGROUND)}));
        putIndex(new SimpleSubscriberInfo(DJIRCSparkAbstraction.class, true, new SubscriberMethodInfo[]{new SubscriberMethodInfo("onEvent3BackgroundThread", DataRcGetPushParams.class, ThreadMode.BACKGROUND)}));
        putIndex(new SimpleSubscriberInfo(DJIRCFoldingDroneAbstraction.class, true, new SubscriberMethodInfo[]{new SubscriberMethodInfo("onEvent3BackgroundThread", DataRcGetPushRcCustomButtonsStatus.class, ThreadMode.BACKGROUND), new SubscriberMethodInfo("onEvent3BackgroundThread", DataRcGetFDPushConnectStatus.class, ThreadMode.BACKGROUND)}));
        putIndex(new SimpleSubscriberInfo(DJILteLinkAbstraction.class, true, new SubscriberMethodInfo[]{new SubscriberMethodInfo("onEvent3BackgroundThread", DataOsdGetPushSdrLteStatus.class, ThreadMode.BACKGROUND)}));
        putIndex(new SimpleSubscriberInfo(FlightControllerPhantom4Abstraction.class, true, new SubscriberMethodInfo[]{new SubscriberMethodInfo("onEvent3BackgroundThread", DataFlycGetPushAvoidParam.class, ThreadMode.BACKGROUND)}));
        putIndex(new SimpleSubscriberInfo(DJISDKCacheAutoGetterVerifier.class, true, new SubscriberMethodInfo[]{new SubscriberMethodInfo("onEvent3BackgroundThread", DJISDKCacheHWAbstractionLayer.AbstractionChangeEvent.class, ThreadMode.BACKGROUND)}));
        putIndex(new SimpleSubscriberInfo(DJIRCProfessionalAbstraction.class, true, new SubscriberMethodInfo[]{new SubscriberMethodInfo("onEvent3BackgroundThread", DataRcGetPushRcProCustomButtonsStatus.class, ThreadMode.BACKGROUND)}));
        putIndex(new SimpleSubscriberInfo(DJIGimbalAbstraction.class, true, new SubscriberMethodInfo[]{new SubscriberMethodInfo("onEvent3BackgroundThread", DataEyeGetPushStabilizationState.class, ThreadMode.BACKGROUND), new SubscriberMethodInfo("onEvent3BackgroundThread", DataGimbalGetPushUserParams.class, ThreadMode.BACKGROUND), new SubscriberMethodInfo("onEvent3BackgroundThread", DataGimbalGetPushParams.class, ThreadMode.BACKGROUND)}));
        putIndex(new SimpleSubscriberInfo(Mobile2HandheldControllerAbstraction.class, true, new SubscriberMethodInfo[]{new SubscriberMethodInfo("onEvent3BackgroundThread", DataCameraSetOpticsZoomMode.class, ThreadMode.BACKGROUND)}));
        putIndex(new SimpleSubscriberInfo(IntelligentFlightAssistant1860Abstraction.class, true, new SubscriberMethodInfo[]{new SubscriberMethodInfo("onEvent3BackgroundThread", DataEyeGetPushAvoidanceParam.class, ThreadMode.BACKGROUND), new SubscriberMethodInfo("onEvent3BackgroundThread", DataEyeGetPushMultiTrackingState.class, ThreadMode.BACKGROUND), new SubscriberMethodInfo("onEvent3BackgroundThread", DataEyeGetPushFrontAvoidance.class, ThreadMode.BACKGROUND), new SubscriberMethodInfo("onEvent3BackgroundThread", DataEyeGetPushTrackStatus.class, ThreadMode.BACKGROUND), new SubscriberMethodInfo("onEvent3BackgroundThread", DataEyeGetPushFlatCheck.class, ThreadMode.BACKGROUND), new SubscriberMethodInfo("onEvent3BackgroundThread", DataEyeGetPushException.class, ThreadMode.BACKGROUND), new SubscriberMethodInfo("onEvent3BackgroundThread", Data2100GetPushCheckStatus.class, ThreadMode.BACKGROUND), new SubscriberMethodInfo("onEvent3BackgroundThread", DataEyeGetPushTimeLapseKeyFrame.class, ThreadMode.BACKGROUND), new SubscriberMethodInfo("onEvent3BackgroundThread", DataEyeGetPushAdvancedPilotAssistantSystemState.class, ThreadMode.BACKGROUND), new SubscriberMethodInfo("onEvent3BackgroundThread", DataEyeGetPushTimeLapseOverallData.class, ThreadMode.BACKGROUND), new SubscriberMethodInfo("onEvent3BackgroundThread", DataEyeGetPushDrawState.class, ThreadMode.BACKGROUND), new SubscriberMethodInfo("onEvent3BackgroundThread", DataEyeGetPushFixedWingState.class, ThreadMode.BACKGROUND), new SubscriberMethodInfo("onEvent3BackgroundThread", DataEyeGetPushPalmControlState.class, ThreadMode.BACKGROUND), new SubscriberMethodInfo("onEvent3BackgroundThread", DataEyeGetPushFaceDetectionTakeOffState.class, ThreadMode.BACKGROUND), new SubscriberMethodInfo("onEvent3BackgroundThread", DataEyeGetPushPOIExecutionParams.class, ThreadMode.BACKGROUND), new SubscriberMethodInfo("onEvent3BackgroundThread", DataEyeGetPushPOITargetInformation.class, ThreadMode.BACKGROUND), new SubscriberMethodInfo("onEvent3BackgroundThread", DataFlycGetPushAvoidParam.class, ThreadMode.BACKGROUND), new SubscriberMethodInfo("onEvent3BackgroundThread", DataEyePushVisionTip.class, ThreadMode.BACKGROUND)}));
        putIndex(new SimpleSubscriberInfo(IntelligentHotpointMissionAbstraction.class, true, new SubscriberMethodInfo[]{new SubscriberMethodInfo("onEvent3BackgroundThread", DataEyeGetPushPOIExecutionParams.class, ThreadMode.BACKGROUND), new SubscriberMethodInfo("onEvent3BackgroundThread", DataEyeGetPushPOITargetInformation.class, ThreadMode.BACKGROUND), new SubscriberMethodInfo("onEvent3BackgroundThread", DataOsdGetPushCommon.class, ThreadMode.BACKGROUND)}));
        putIndex(new SimpleSubscriberInfo(DJICameraXTBaseAbstraction.class, true, new SubscriberMethodInfo[]{new SubscriberMethodInfo("onEvent3BackgroundThread", DataCameraGetPushStateInfo.class, ThreadMode.BACKGROUND), new SubscriberMethodInfo("onEvent3BackgroundThread", DataCameraGetPushTauParam.class, ThreadMode.BACKGROUND), new SubscriberMethodInfo("onEvent3BackgroundThread", DataCameraGetPushShotParams.class, ThreadMode.BACKGROUND)}));
        putIndex(new SimpleSubscriberInfo(RTKPM420RTKAbstraction.class, true, new SubscriberMethodInfo[]{new SubscriberMethodInfo("onEvent3BackgroundThread", DataOsdGetPushSdrLteStatus.class, ThreadMode.BACKGROUND)}));
        putIndex(new SimpleSubscriberInfo(BatteryWM160Abstraction.class, true, new SubscriberMethodInfo[]{new SubscriberMethodInfo("onEvent3BackgroundThread", DataSmartBatteryGetPushDynamicData.class, ThreadMode.BACKGROUND)}));
        putIndex(new SimpleSubscriberInfo(DJIOcuSyncLinkAbstraction.class, true, new SubscriberMethodInfo[]{new SubscriberMethodInfo("onEvent3BackgroundThread", DataOsdGetPushSdrConfigInfo.class, ThreadMode.BACKGROUND), new SubscriberMethodInfo("onEvent3BackgroundThread", DataOsdGetSDRPushCustomCodeRate.class, ThreadMode.BACKGROUND), new SubscriberMethodInfo("onEvent3BackgroundThread", DataOsdGetPushSignalQuality.class, ThreadMode.BACKGROUND), new SubscriberMethodInfo("onEvent3BackgroundThread", DataOsdGetPushSDRNfParams.class, ThreadMode.BACKGROUND), new SubscriberMethodInfo("onEvent3BackgroundThread", DataOsdGetPushChannalStatus.class, ThreadMode.BACKGROUND), new SubscriberMethodInfo("onEvent3BackgroundThread", DataOsdGetPushCheckStatusV2.class, ThreadMode.BACKGROUND), new SubscriberMethodInfo("onEvent3BackgroundThread", DataGetPushMultiRcPairingStatus.class, ThreadMode.BACKGROUND)}));
        putIndex(new SimpleSubscriberInfo(DJIOcuSyncDualBandLinkAbstraction.DualBandRSSIEventHandler.class, true, new SubscriberMethodInfo[]{new SubscriberMethodInfo("onEvent3BackgroundThread", DataOsdGetPushSdrSweepFrequency.class, ThreadMode.BACKGROUND)}));
        putIndex(new SimpleSubscriberInfo(DJIWifiLinkAbstraction.class, true, new SubscriberMethodInfo[]{new SubscriberMethodInfo("onEvent3BackgroundThread", DataOsdGetPushSignalQuality.class, ThreadMode.BACKGROUND), new SubscriberMethodInfo("onEvent3BackgroundThread", DataWifiGetPushSignal.class, ThreadMode.BACKGROUND), new SubscriberMethodInfo("onEvent3BackgroundThread", DataWifiGetPushElecSignal.class, ThreadMode.BACKGROUND)}));
        putIndex(new SimpleSubscriberInfo(DJICameraX7Abstraction.class, true, new SubscriberMethodInfo[]{new SubscriberMethodInfo("onEvent3BackgroundThread", DataCameraGetPushShotInfo.class, ThreadMode.BACKGROUND)}));
        putIndex(new SimpleSubscriberInfo(LightbridgeAbstraction.class, true, new SubscriberMethodInfo[]{new SubscriberMethodInfo("onEvent3BackgroundThread", DataOsdGetPushSignalQuality.class, ThreadMode.BACKGROUND), new SubscriberMethodInfo("onEvent3BackgroundThread", DataRcGetPushParams.class, ThreadMode.BACKGROUND), new SubscriberMethodInfo("onEvent3BackgroundThread", DataOsdGetPushSweepFrequency.class, ThreadMode.BACKGROUND), new SubscriberMethodInfo("onEvent3BackgroundThread", DataOsdGetPushChannalStatus.class, ThreadMode.BACKGROUND)}));
        putIndex(new SimpleSubscriberInfo(DJIVersionRC.class, true, new SubscriberMethodInfo[]{new SubscriberMethodInfo("onEvent3BackgroundThread", DJIVersionBaseComponent.class, ThreadMode.BACKGROUND), new SubscriberMethodInfo("onEvent3BackgroundThread", DJIComponentManager.RcComponentType.class, ThreadMode.BACKGROUND), new SubscriberMethodInfo("onEvent3BackgroundThread", DataCommonGetPushUpgradeStatus.class, ThreadMode.BACKGROUND)}));
        putIndex(new SimpleSubscriberInfo(DJIWifiLinkFoldingDroneAbstraction.RSSIEventHandler.class, true, new SubscriberMethodInfo[]{new SubscriberMethodInfo("onEvent3BackgroundThread", DataWifiGetPushSweepFrequency.class, ThreadMode.BACKGROUND)}));
        putIndex(new SimpleSubscriberInfo(DiagnosticsBaseHandler.class, true, new SubscriberMethodInfo[]{new SubscriberMethodInfo("onEvent3BackgroundThread", DiagnosticsBaseHandler.class)}));
        putIndex(new SimpleSubscriberInfo(DJIGimbalMobileHandheldAbstraction.class, true, new SubscriberMethodInfo[]{new SubscriberMethodInfo("onEvent3BackgroundThread", DataGimbalGetPushAbnormalStatus.class, ThreadMode.BACKGROUND)}));
    }

    private static void putIndex(SubscriberInfo info) {
        SUBSCRIBER_INDEX.put(info.getSubscriberClass(), info);
    }

    public SubscriberInfo getSubscriberInfo(Class<?> subscriberClass) {
        SubscriberInfo info = SUBSCRIBER_INDEX.get(subscriberClass);
        if (info != null) {
            return info;
        }
        return null;
    }
}
